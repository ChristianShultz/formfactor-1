<?xml version="1.0"?>
<DriverProps>

  <version>2</version>

  <!-- control the fiting across t_ins -->

  <threePointComparatorProps>
    <!-- more options in jackfitter, threepoint_something.h -->
    <fit_type>const</fit_type>   

    <!-- basic fit comparator -->
    <baseProp>CompareFitsByChisqPerNDoF</baseProp>

    <!-- add some bias function to the comparator as 
    a function of fit range (try to bias toward middle?) -->
    <biasProp>none</biasProp>     

    <!-- multiply extra bits on the comparator 
    ie smaller errors on the constant etc -->
    <extraProps>         
    </extraProps>                                       

    <!-- fit range, should be less than 
    or equal to correlator length --> 
    <tlow>0</tlow>       
    <thigh>32</thigh>

    <!-- minimum number of timeslices for a fit -->
    <minTSlice>7</minTSlice>
  </threePointComparatorProps>


  <!-- specify enough about the source and sink so radmat can make redstar xml --> 

  <threePointIni> 


    <threePointCorrXMLIni>


      <continuumMatElemXML>

        <sink>
          <state>
            <J>0</J>
            <H></H>
            <parity>false</parity>
            <fill_star>true</fill_star>    <!-- do we want to consider all the rotations of the provided momentum -->
            <mom>
              <elem>0 0 0</elem>
              <elem>1 0 0</elem>
              <elem>1 1 0</elem>
              <elem>1 1 1</elem>
              <elem>2 0 0</elem>
            </mom>
            <twoI_z>2</twoI_z>
            <op_stem>pion_proj0</op_stem>
            <creation_op>false</creation_op>
            <smearedP>true</smearedP>
            <isProjected>true</isProjected>
          </state>
          <t_slice>32</t_slice>
        </sink>



        <insertion>
          <!-- don't consider matrix elements w/ q^2_space < pmin-->
          <pmin>0</pmin>
          <!-- don't consider matrix elements w/ q^2_space > pmax-->
          <pmax>0</pmax>
          <t_slice>-3</t_slice>
          <time>
            <active>true</active>               <!-- on or off -->
            <J>0</J>
            <H></H>
            <parity>true</parity>
            <photons>

              <!--  NB:

              Isospin 1, Iz = 0 mesons have a factor of 1/2 from redstar            
              the photon current is represented as:
              0.5(q_u - q_d) * Isospin1 + 0.5(q_u + q_d)*Isospin0

              Isospin 1, Iz = 0 mesons have a factor of 1/2 from redstar    
              which means that their charge coefficient should be 1 

              Isospin 0 mesons have a factor of 1/root(2) from redstar
              which means that their charge factor should be 1/(3*root(2))         

              -->

              <elem> 
                <charge_coefficient>1.</charge_coefficient>  <!-- a prefactor for this op -->
                <op_stem>b_b0xD0_J0__J0</op_stem>
                <twoI_z>0</twoI_z>
              </elem>            

              <elem> 
                <charge_coefficient>0.23570226</charge_coefficient>  <!-- a prefactor for this op -->
                <op_stem>hl_b0xD0_J0__J0</op_stem>
                <twoI_z>0</twoI_z>
              </elem>            
            </photons>


            <creation_op>true</creation_op>
            <smearedP>false</smearedP>
          </time>
          <space>
            <active>false</active>
            <J>1</J>
            <H></H>
            <parity>false</parity>
            <photons>
              <elem>
                <charge_coefficient>1.</charge_coefficient>
                <op_stem>rho_rhoxD0_J0__J1</op_stem>
                <twoI_z>0</twoI_z>
              </elem>
              <elem>
                <charge_coefficient>0.23570226</charge_coefficient>
                <op_stem>omegal_rhoxD0_J0__J1</op_stem>
                <twoI_z>0</twoI_z>
              </elem>
            </photons>
            <creation_op>true</creation_op>
            <smearedP>false</smearedP>
          </space>
        </insertion>

        <source>
          <state>
            <J>0</J>
            <H></H>
            <parity>false</parity>
            <fill_star>true</fill_star>
            <mom>
              <elem>0 0 0</elem>
              <elem>1 0 0</elem>
              <elem>1 1 0</elem>
              <elem>1 1 1</elem>
              <elem>2 0 0</elem>
            </mom>
            <twoI_z>2</twoI_z>
            <op_stem>pion_proj0</op_stem>
            <creation_op>true</creation_op>
            <smearedP>true</smearedP>
            <isProjected>true</isProjected>
          </state>
          <t_slice>0</t_slice>
        </source>

        <ensemble>szscl3_16_128_b1p50_t_x4p300_um0p0743_n1p265_per</ensemble>
      </continuumMatElemXML>

      <!-- for constructing a mean Q^2 on the fly via a simple boost --> 
      <sink_id>pion_proj0</sink_id>
      <maSink>0.148382</maSink>

      <source_id>pion_proj0</source_id>
      <maSource>0.148382</maSource>

      <!-- to come -->
      <cubicSymmetry>false</cubicSymmetry>
      <gParitySymmetry>false</gParitySymmetry>

      <!-- there is a flavor space factor from the wick contraction
      as well as the standard vector current renormalization -->
      <renormalization>
        <RGE_prop>4.</RGE_prop>  <!-- be wary of this stupid ass factor -->
        <Z_t>1.039</Z_t>
        <Z_s>1.184</Z_s>
      </renormalization>

    </threePointCorrXMLIni>


    <!-- ingredient list --> 

    <radmatDBProp>
      <threePointDatabase>
        <dbname>szscl3_16_128_b1p50_t_x4p300_um0p0743_n1p265_per.qq_0_1_2_3_4.dt32.sdb</dbname>
        <badlist>bad_corrs.xml</badlist>
      </threePointDatabase>
      <normalizationDatabase>
        <dbname>/u/home/shultz/optimized_operators/szscl3_16_128_b1p50_t_x4p300_um0p0743_n1p265_per/norms.szscl3_16_128_b1p50_t_x4p300_um0p0743_n1p265_per.sdb</dbname>
        <badlist>bad_norms.xml</badlist>
      </normalizationDatabase>

      <!-- is the overlap for Z* the same as for Z (did we do the full rephasing?) -->
      <allow_daggering>true</allow_daggering>

      <!-- do all the rows in a given irrep have the same values for Z and E (they better)-->
      <!-- this also applies to all momenta related by an allowed lattice rotation (the star of p ) -->
      <LG_symmetry>true</LG_symmetry>
    </radmatDBProp>

    <!-- specify a decomposition RhoPi means Vector to Pseudo-Scalar,  PiRho would be Pseudo-Scalar to Vector, either roll your own or use the ones provided --> 

    <matElemID>PiPi</matElemID>

    <!-- anisotropy --> 

    <xi>3.45</xi>

    <!-- spatial extent in integer --> 

    <L_s>16</L_s>
  </threePointIni>

  <maxThread>10</maxThread>

  <!-- energy of lightest vector or branch cut from two pions -->
  <poleMass>0.216166</poleMass>

  <chisq>none</chisq>

  <tolerance>1e-6</tolerance>

</DriverProps>
